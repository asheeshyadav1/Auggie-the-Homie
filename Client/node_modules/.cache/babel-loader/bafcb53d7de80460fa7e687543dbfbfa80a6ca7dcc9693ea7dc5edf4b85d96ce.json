{"ast":null,"code":"var _jsxFileName = \"/Users/asheeshyadav/Desktop/SFU/EDUC 240/Gemini/Client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [value, setValue] = useState('');\n  const [error, setError] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // const SurpriseOption = [\n  //   'Who is the president of the United States?',\n  //   'What is the capital of France?',\n  //   'When is Halloween?',\n  // ];\n\n  // const surprise = () => {\n  //   const randomIndex = Math.floor(Math.random() * SurpriseOption.length);\n  //   setValue(SurpriseOption[randomIndex]);\n  // };\n\n  const getResponse = async () => {\n    if (!value) {\n      setError('Error! Please enter a question');\n      return;\n    }\n    setLoading(true);\n    setChatHistory(oldChatHistory => [...oldChatHistory, {\n      role: 'user',\n      parts: value\n    }]);\n    setValue('');\n    try {\n      const options = {\n        method: 'POST',\n        body: JSON.stringify({\n          history: chatHistory.map(chatItem => ({\n            role: chatItem.role,\n            parts: [{\n              text: chatItem.parts\n            }]\n          })),\n          message: value\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const response = await fetch('https://gem-server.vercel.app/gemini', options);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.text();\n      setChatHistory(oldChatHistory => [...oldChatHistory, {\n        role: 'model',\n        parts: data\n      }]);\n    } catch (error) {\n      console.error(error);\n      setError('Error! Something went wrong');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const clear = () => {\n    setValue('');\n    setChatHistory([]);\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Friend Chatlog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-window\",\n        children: [chatHistory.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enter Something in the Textbox to start the convo...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-result\",\n          children: [chatHistory.map((chatItem, _index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-container ${chatItem.role}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `chat-item ${chatItem.role}`,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: `answer ${chatItem.role}`,\n                children: [chatItem.role === 'user' ? 'You' : 'Friend', \": \", chatItem.parts]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, _index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-container model\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-item model\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"answer model\",\n                children: \"Friend: Fetching response...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          value: value,\n          placeholder: \"Ask me anything...\",\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), !error && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ask-button\",\n          onClick: getResponse,\n          disabled: loading,\n          children: \"Ask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 22\n        }, this), error && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-button\",\n          onClick: clear,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"surprise\",\n          onClick: surprise,\n          disabled: !chatHistory.length || loading,\n          children: \"Surprise Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"tjCimeX68E0eaScMvUEo4Dnv5p0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","value","setValue","error","setError","chatHistory","setChatHistory","loading","setLoading","getResponse","oldChatHistory","role","parts","options","method","body","JSON","stringify","history","map","chatItem","text","message","headers","response","fetch","ok","Error","data","console","clear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_index","placeholder","onChange","e","target","onClick","disabled","surprise","_c","$RefreshReg$"],"sources":["/Users/asheeshyadav/Desktop/SFU/EDUC 240/Gemini/Client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './index.css';\n\nconst App = () => {\n  const [value, setValue] = useState('');\n  const [error, setError] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // const SurpriseOption = [\n  //   'Who is the president of the United States?',\n  //   'What is the capital of France?',\n  //   'When is Halloween?',\n  // ];\n\n  // const surprise = () => {\n  //   const randomIndex = Math.floor(Math.random() * SurpriseOption.length);\n  //   setValue(SurpriseOption[randomIndex]);\n  // };\n\n  const getResponse = async () => {\n    if (!value) {\n      setError('Error! Please enter a question');\n      return;\n    }\n    setLoading(true);\n    setChatHistory(oldChatHistory => [\n      ...oldChatHistory,\n      { role: 'user', parts: value }\n    ]);\n    setValue('');\n    try {\n      const options = {\n        method: 'POST',\n        body: JSON.stringify({\n          history: chatHistory.map(chatItem => ({\n            role: chatItem.role,\n            parts: [{ text: chatItem.parts }]\n          })),\n          message: value\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const response = await fetch('https://gem-server.vercel.app/gemini', options);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.text();\n      setChatHistory(oldChatHistory => [\n        ...oldChatHistory,\n        { role: 'model', parts: data }\n      ]);\n    } catch (error) {\n      console.error(error);\n      setError('Error! Something went wrong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const clear = () => {\n    setValue('');\n    setChatHistory([]);\n    setError('');\n  };\n\n  return (\n    <div className='app'>\n      <div className='header'>\n        <h1>Friend Chatlog</h1>\n      </div>\n      <div className='chat-container'>\n        <div className='chat-window'>\n          {chatHistory.length === 0 && !loading && (\n            <div className='placeholder'>\n              <p>Enter Something in the Textbox to start the convo...</p>\n            </div>\n          )}\n          <div className='search-result'>\n            {chatHistory.map((chatItem, _index) => (\n              <div key={_index} className={`message-container ${chatItem.role}`}>\n                <div className={`chat-item ${chatItem.role}`}>\n                  <p className={`answer ${chatItem.role}`}>\n                    {chatItem.role === 'user' ? 'You' : 'Friend'}: {chatItem.parts}\n                  </p>\n                </div>\n              </div>\n            ))}\n            {loading && (\n              <div className='message-container model'>\n                <div className='chat-item model'>\n                  <p className='answer model'>Friend: Fetching response...</p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className='input-container'>\n          <input\n            className='input'\n            value={value}\n            placeholder='Ask me anything...'\n            onChange={(e) => setValue(e.target.value)}\n          />\n          {!error && <button className='ask-button' onClick={getResponse} disabled={loading}>Ask</button>}\n          {error && <button className='clear-button' onClick={clear}>Clear</button>}\n          <button className='surprise' onClick={surprise} disabled={!chatHistory.length || loading}>\n            Surprise Me\n          </button>\n        </div>\n        {error && <p className='error'>{error}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}