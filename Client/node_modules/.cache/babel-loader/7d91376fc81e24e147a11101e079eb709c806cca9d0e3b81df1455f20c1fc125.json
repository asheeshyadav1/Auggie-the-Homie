{"ast":null,"code":"var _jsxFileName = \"/Users/asheeshyadav/Desktop/SFU/EDUC 240/Gemini/Client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [value, setValue] = useState('');\n  const [error, setError] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const SurpriseOption = ['Who is the president of the United States?', 'What is the capital of France?', 'When is Halloween?'];\n  const surprise = () => {\n    const randomIndex = Math.floor(Math.random() * SurpriseOption.length);\n    setValue(SurpriseOption[randomIndex]);\n  };\n  const getResponse = async () => {\n    if (!value) {\n      setError('Error! Please enter a question');\n      return;\n    }\n    try {\n      const options = {\n        method: 'POST',\n        body: JSON.stringify({\n          history: chatHistory.map(chatItem => ({\n            role: chatItem.role,\n            parts: [{\n              text: chatItem.parts\n            }]\n          })),\n          message: value\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const response = await fetch('https://gem-server.vercel.app/gemini', options);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.text();\n      setChatHistory(oldChatHistory => [...oldChatHistory, {\n        role: 'user',\n        parts: value\n      }, {\n        role: 'model',\n        parts: data\n      }]);\n      setValue('');\n    } catch (error) {\n      console.error(error);\n      setError('Error! Something went wrong');\n    }\n  };\n  const clear = () => {\n    setValue('');\n    setChatHistory([]);\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: [\"What do you want to know?\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"surprise\",\n          onClick: surprise,\n          disabled: !chatHistory.length,\n          children: \"Surprise Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          value: value,\n          placeholder: \"When is Christmas?\",\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), !error && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ask-button\",\n          onClick: getResponse,\n          children: \"Ask Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 22\n        }, this), error && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-button\",\n          onClick: clear,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-result\",\n        children: chatHistory.map((chatItem, _index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-item\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `answer ${chatItem.role}`,\n            children: [chatItem.role, \": \", chatItem.parts]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, _index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"vti5MGl4QRdawGXO+DHMKpRKqyE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","value","setValue","error","setError","chatHistory","setChatHistory","SurpriseOption","surprise","randomIndex","Math","floor","random","length","getResponse","options","method","body","JSON","stringify","history","map","chatItem","role","parts","text","message","headers","response","fetch","ok","Error","data","oldChatHistory","console","clear","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","_index","_c","$RefreshReg$"],"sources":["/Users/asheeshyadav/Desktop/SFU/EDUC 240/Gemini/Client/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [value, setValue] = useState('');\n  const [error, setError] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n\n  const SurpriseOption = [\n    'Who is the president of the United States?',\n    'What is the capital of France?',\n    'When is Halloween?',\n  ];\n\n  const surprise = () => {\n    const randomIndex = Math.floor(Math.random() * SurpriseOption.length);\n    setValue(SurpriseOption[randomIndex]);\n  };\n\n  const getResponse = async () => {\n    if (!value) {\n      setError('Error! Please enter a question');\n      return;\n    }\n    try {\n      const options = {\n        method: 'POST',\n        body: JSON.stringify({\n          history: chatHistory.map(chatItem => ({\n            role: chatItem.role,\n            parts: [{ text: chatItem.parts }]\n          })),\n          message: value\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const response = await fetch('https://gem-server.vercel.app/gemini', options);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.text();\n      setChatHistory(oldChatHistory => [\n        ...oldChatHistory,\n        { role: 'user', parts: value },\n        { role: 'model', parts: data }\n      ]);\n      setValue('');\n    } catch (error) {\n      console.error(error);\n      setError('Error! Something went wrong');\n    }\n  };\n\n  const clear = () => {\n    setValue('');\n    setChatHistory([]);\n    setError('');\n  };\n\n  return (\n    <div className='app'>\n      <div className='chat-container'>\n        <p className='title'>\n          What do you want to know?\n          <button className='surprise' onClick={surprise} disabled={!chatHistory.length}>\n            Surprise Me\n          </button>\n        </p>\n        <div className='input-container'>\n          <input\n            className='input'\n            value={value}\n            placeholder='When is Christmas?'\n            onChange={(e) => setValue(e.target.value)}\n          />\n          {!error && <button className='ask-button' onClick={getResponse}>Ask Me</button>}\n          {error && <button className='clear-button' onClick={clear}>Clear</button>}\n        </div>\n        {error && <p className='error'>{error}</p>}\n        <div className='search-result'>\n          {chatHistory.map((chatItem, _index) => (\n            <div key={_index} className='chat-item'>\n              <p className={`answer ${chatItem.role}`}>\n                {chatItem.role}: {chatItem.parts}\n              </p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}