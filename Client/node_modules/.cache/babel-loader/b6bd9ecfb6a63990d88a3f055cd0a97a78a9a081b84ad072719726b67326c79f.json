{"ast":null,"code":"var _jsxFileName = \"/Users/asheeshyadav/Desktop/SFU/EDUC 240/Gemini/Client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [value, setValue] = useState('');\n  const [error, setError] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const chatEndRef = useRef(null);\n  const [showPopup, setShowPopup] = useState(null); // null, 'info', 'how-to', or 'none'\n\n  const openPopup = type => {\n    setShowPopup(type);\n  };\n  const closePopup = () => {\n    setShowPopup(null);\n  };\n  const SurpriseOption = ['Who is the president of the United States?', 'What is the capital of France?', 'When is Halloween?'];\n  const surprise = () => {\n    const randomIndex = Math.floor(Math.random() * SurpriseOption.length);\n    setValue(SurpriseOption[randomIndex]);\n  };\n  const getResponse = async () => {\n    if (!value) {\n      setError('Error! Please enter a question');\n      return;\n    }\n    setLoading(true);\n    setChatHistory(oldChatHistory => [...oldChatHistory, {\n      role: 'user',\n      parts: value\n    }]);\n    setValue('');\n    try {\n      const options = {\n        method: 'POST',\n        body: JSON.stringify({\n          history: chatHistory.map(chatItem => ({\n            role: chatItem.role,\n            parts: [{\n              text: chatItem.parts\n            }]\n          })),\n          message: value\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const response = await fetch('https://gem-server.vercel.app/gemini', options);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.text();\n      setChatHistory(oldChatHistory => [...oldChatHistory, {\n        role: 'model',\n        parts: data\n      }]);\n    } catch (error) {\n      console.error(error);\n      setError('Error! Something went wrong');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const clear = () => {\n    setValue('');\n    setChatHistory([]);\n    setError('');\n  };\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [chatHistory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-overlay\",\n      children: [showPopup === 'info' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to Friend Chatlog!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is a chatbot application where you can ask questions and get answers.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openPopup('how-to'),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), showPopup === 'how-to' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"How to Use\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"To start a conversation, type your question in the input box and hit \\\"Ask\\\". You can also use the \\\"Surprise Me\\\" button to get a random question.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowPopup(null),\n          children: \"Go!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), !showPopup && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Friend Chatlog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openPopup('info'),\n          children: \"Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openPopup('how-to'),\n          children: \"How to Use\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-window\",\n          children: [chatHistory.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"placeholder\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Start a conversation by asking a question!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-result\",\n            children: [chatHistory.map((chatItem, _index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message-container ${chatItem.role}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `chat-item ${chatItem.role}`,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: `answer ${chatItem.role}`,\n                  children: [chatItem.role === 'user' ? 'You' : 'Friend', \": \", chatItem.parts]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this)\n            }, _index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-container model\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-item model\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"answer model\",\n                  children: [\"Friend:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"loading-dots\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"dot\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"dot\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"dot\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: chatEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            value: value,\n            placeholder: \"Ask me anything...\",\n            onChange: e => setValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), !error && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ask-button\",\n            onClick: getResponse,\n            disabled: loading,\n            children: \"Ask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this), error && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-button\",\n            onClick: clear,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"surprise\",\n            onClick: surprise,\n            disabled: !chatHistory.length || loading,\n            children: \"Surprise Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ra9Wp1zfQ/1rMM2Jxx2pAhBxvIM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","value","setValue","error","setError","chatHistory","setChatHistory","loading","setLoading","chatEndRef","showPopup","setShowPopup","openPopup","type","closePopup","SurpriseOption","surprise","randomIndex","Math","floor","random","length","getResponse","oldChatHistory","role","parts","options","method","body","JSON","stringify","history","map","chatItem","text","message","headers","response","fetch","ok","Error","data","console","clear","_chatEndRef$current","current","scrollIntoView","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_index","ref","placeholder","onChange","e","target","disabled","_c","$RefreshReg$"],"sources":["/Users/asheeshyadav/Desktop/SFU/EDUC 240/Gemini/Client/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\nconst App = () => {\n  const [value, setValue] = useState('');\n  const [error, setError] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const chatEndRef = useRef(null);\n  const [showPopup, setShowPopup] = useState(null); // null, 'info', 'how-to', or 'none'\n\n  const openPopup = (type) => {\n    setShowPopup(type);\n  };\n\n  const closePopup = () => {\n    setShowPopup(null);\n  };\n\n  const SurpriseOption = [\n    'Who is the president of the United States?',\n    'What is the capital of France?',\n    'When is Halloween?',\n  ];\n\n  const surprise = () => {\n    const randomIndex = Math.floor(Math.random() * SurpriseOption.length);\n    setValue(SurpriseOption[randomIndex]);\n  };\n\n  const getResponse = async () => {\n    if (!value) {\n      setError('Error! Please enter a question');\n      return;\n    }\n    setLoading(true);\n    setChatHistory((oldChatHistory) => [\n      ...oldChatHistory,\n      { role: 'user', parts: value },\n    ]);\n    setValue('');\n    try {\n      const options = {\n        method: 'POST',\n        body: JSON.stringify({\n          history: chatHistory.map((chatItem) => ({\n            role: chatItem.role,\n            parts: [{ text: chatItem.parts }],\n          })),\n          message: value,\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const response = await fetch('https://gem-server.vercel.app/gemini', options);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.text();\n      setChatHistory((oldChatHistory) => [\n        ...oldChatHistory,\n        { role: 'model', parts: data },\n      ]);\n    } catch (error) {\n      console.error(error);\n      setError('Error! Something went wrong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const clear = () => {\n    setValue('');\n    setChatHistory([]);\n    setError('');\n  };\n\n  useEffect(() => {\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [chatHistory]);\n\n  return (\n    <div className=\"app\">\n      {showPopup && (\n        <div className=\"popup-overlay\">\n          {showPopup === 'info' && (\n            <div className=\"popup\">\n              <h2>Welcome to Friend Chatlog!</h2>\n              <p>This is a chatbot application where you can ask questions and get answers.</p>\n              <button onClick={() => openPopup('how-to')}>Next</button>\n            </div>\n          )}\n          {showPopup === 'how-to' && (\n            <div className=\"popup\">\n              <h2>How to Use</h2>\n              <p>To start a conversation, type your question in the input box and hit \"Ask\". You can also use the \"Surprise Me\" button to get a random question.</p>\n              <button onClick={() => setShowPopup(null)}>Go!</button>\n            </div>\n          )}\n        </div>\n      )}\n      {!showPopup && (\n        <>\n          <div className=\"header\">\n            <h1>Friend Chatlog</h1>\n            <button onClick={() => openPopup('info')}>Info</button>\n            <button onClick={() => openPopup('how-to')}>How to Use</button>\n          </div>\n          <div className=\"chat-container\">\n            <div className=\"chat-window\">\n              {chatHistory.length === 0 && (\n                <div className=\"placeholder\">\n                  <p>Start a conversation by asking a question!</p>\n                </div>\n              )}\n              <div className=\"search-result\">\n                {chatHistory.map((chatItem, _index) => (\n                  <div\n                    key={_index}\n                    className={`message-container ${chatItem.role}`}\n                  >\n                    <div className={`chat-item ${chatItem.role}`}>\n                      <p className={`answer ${chatItem.role}`}>\n                        {chatItem.role === 'user' ? 'You' : 'Friend'}: {chatItem.parts}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n                {loading && (\n                  <div className=\"message-container model\">\n                    <div className=\"chat-item model\">\n                      <p className=\"answer model\">\n                        Friend:\n                        <span className=\"loading-dots\">\n                          <span className=\"dot\"></span>\n                          <span className=\"dot\"></span>\n                          <span className=\"dot\"></span>\n                        </span>\n                      </p>\n                    </div>\n                  </div>\n                )}\n              </div>\n              <div ref={chatEndRef} /> {/* Anchor for scrolling */}\n            </div>\n            <div className=\"input-container\">\n              <input\n                className=\"input\"\n                value={value}\n                placeholder=\"Ask me anything...\"\n                onChange={(e) => setValue(e.target.value)}\n              />\n              {!error && (\n                <button\n                  className=\"ask-button\"\n                  onClick={getResponse}\n                  disabled={loading}\n                >\n                  Ask\n                </button>\n              )}\n              {error && (\n                <button className=\"clear-button\" onClick={clear}>\n                  Clear\n                </button>\n              )}\n              <button\n                className=\"surprise\"\n                onClick={surprise}\n                disabled={!chatHistory.length || loading}\n              >\n                Surprise Me\n              </button>\n            </div>\n            {error && <p className=\"error\">{error}</p>}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}